someCondition ? pickThisIfTrue : pickThisIfFalse;

// Синтаксис тернарного оператора заключается в 
// условии, которое отделяется от выражений вопросительным знаком.
// Одно из этих выражений будет выбрано, в зависимости от условия,
// стоящего перед вопросительным знаком. Если условие истинно, то
// будет выбрано левое выражение. В противном случае - правое.

var isArthur = false;
var weapon;

weapon = isArthur ? "Экскалибур" : "Длинный меч";

// Тернарный оператор возвращает выбранное выражение,
// которое мы впоследствии может сохранить в переменной.

console.log("Выбранное оружие: " + weapon); // => Длинный меч

// Мы можем конкатенировать тернарный оператор со строкой,
// еще больше сократив код 

console.log("Выбранное оружие: " + isArthur ? "Экскалибур" : "Длинный меч"); // => Экскалибур

// Упс, в консоль вывелось Экскалибур
// Конкатенация имеет больший приоритет для интерпретатора
// javascript и потому она выполниться первая.
// Не пустая строка всегда истинна, отсюда и результат

console.log("Выбранное оружие: false" ? "Экскалибур" : "Длинный меч"); // => Экскалибур

// Поэтому нужно взять наш тернарный оператор в скобки и тогда все будет океюшки

console.log( "Выбранное оружие: " + (isArthur ? "Экскалибур" : "Длинный меч") ); // => Длинный меч

// Мы можем использовать составные условия перед вопросительным знаком

var isKing = false,
		isArthur = true;

console.log( "Выбранное оружие: " + (isArthur && isKing ? "Экскалибур" : "Длинный меч") ); // => Длинный меч

// Также выражения после вопросительного знака могут выполняться

isArthur && isKing ? alert("Да здравствует Артур! Король Британии!") : alert("Вперед Рыцарь! Во славу короля!");

// Мы можем пойти дальше и вставить в выражения самовызывающиеся функции.
// Обратите внимание на скобочки в конце функций

isArthur && isKing ? function() {
												alert("Да здравствует Артур! Король Британии!");
												console.log("ВЫбранное оружие: Экскалибур");
										 }() 
									 : function() {
												alert("Вперед Рыцарь! Во славу короля!");
												console.log("Выбранное оружие: Длинный меч");
										 }();

// Также мы можем присваивать несколько значений 
// в выражениях справа от восклицательного знака

var isArthur = true,
		isKing = false,
		weapon,
		helmet;

isArthur && isKing ? (weapon = "Экскалибур", helmet = "Корона")
									 	 :
									 	 (weapon = "Длинный меч", helmet = "Железный шлем");

console.log("Выбранное оружие: " + weapon + "\nВыбранный шлем: " + helmet);

// И наконец эпик! Вложенные тернарные операторы. Вообще в целях 
// читаемости кода использовать их не рекомендается, но все же знать о такой 
// возможности стоит и вы наверняка рано или поздно встретитесь с этими монстрами


var isArthur = true,
		isKing = false,
		isArcher = true,
		weapon,
		helmet;

isArthur && isKing ? (weapon = "Экскалибур", helmet = "Корона")
									 :
									 isArcher ? (weapon = "Длинный лук", helmet = "Кожаный шлем")
									 					: (weapon = "Длинный меч", helmet = "Железный шлем");























